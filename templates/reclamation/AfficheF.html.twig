{% extends 'base.html.twig' %}

{% block title %}Liste des reclamations
{% endblock %}
{% block StyleAfterTemplate %}
	<link href="{{asset('https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css')}}" rel="stylesheet"/>
	<link rel="stylesheet" href="{{asset('https://fonts.googleapis.com/icon?family=Material+Icons')}}">
	<style>

		/* Table actions icons*/
		table.table td a.view {
			color: #03A9F4;
		}

		table.table td a.edit {
			color: #FFC107;
		}

		table.table td a.delete {
			color: #E34724;
			text-align: center;
		}
		.hint-text {
			float: left;
			margin-top: 6px;
			font-size: 95%;
		}
	</style>
{% endblock StyleAfterTemplate %}
{% block content %}
	<div class="row justify-content-md-center">

		<div class="col-lg-10">
			<div class="card o-hidden border-0 shadow-lg my-1">
				<div class="card-body p-0">
					<div class="p-5">
						<div class="text-center">
							<h1 class="h4 text-gray-900 mb-4">Liste des reclamations</h1>
						</div>

						<a href="{{ path ('AjoutreclamationFOG') }}" class="btn btn-success btn float-right col-sm col-md-3">
							<span class="icon text-white-50">
								<i style="float: left;" class="material-icons mr-2">&#xE147;</i>
							</span>
							<span class="text">Ajouter Reclamation</span>
						</a>
						<div class="table-responsive-sm mt-4">
							<div class="row">
								<div class="col-sm col-md-6">
									<div id="dataTable_filter" class="dataTables_filter">
										<input id="myInput" type="text" class="form-control form-control-sm float-right" placeholder="Search" aria-controls="dataTable">
									</div>
								</div>

							</div>
							<br>
							<table class="table table-hover " id="myTable">
								<thead class="thead-light ">
									<tr>
										<th scope="col" onclick="sortTable(0)">Num Reclamation
										</th>
										<th scope="col" onclick="sortTable(1)">Destinataire
										</th>
										<th scope="col" onclick="sortTable(2)">Statut Reclamation
										</th>
										<th scope="col" onclick="sortTable(3)">Date Reclamation
										</th>
										<th scope="col" onclick="sortTable(4)">Type Reclamatipn
										</th>
										<th scope="col"></th>
									</tr>

								</thead>
								<tbody id="myTable">

									{% for c in reclamation  %}
										<tr>
											<td>
												<a href="{{path('show_rec',{'numReclamation':c.numReclamation}) }}">
													{{c.numReclamation}}</a>
											</td>
											<td>
												{{c.destinataire}}
											</td>
											<td>
												{{c.statutReclamation}}
											</td>
											<td>
												{{c.dateReclamation|date("d/m/Y")}}
											</td>


											<td>
												{{c.idTypeReclamation.nomTypeReclamation}}
											</td>

											<td>
												<a href="{{path('rf',{'numReclamation':c.numReclamation}) }}" class="delete" title="Delete" data-toggle="tooltip">
													<i class="material-icons">&#xe872;</i>
												</td>
											</td>
										</tr>
									{% endfor %}
								</tbody>
							</table>
							<a href="{{ path('ReclamationRecuF',{'id':app.user.nom}) }}" class="btn btn-success btn float-right col-sm col-md-3">

								<span class="text">Réclamation Récu</span>
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	{% endblock %}
	{% block JsAfterTemplate %}
		<script>
			$(document).ready(function () {
$("#myInput").on("keyup", function () {
var value = $(this).val().toLowerCase();
$("#myTable > tbody > tr").filter(function () {
$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
});
});
});
function sortTable(n) {
var table,
rows,
switching,
i,
x,
y,
shouldSwitch,
dir,
switchcount = 0;
table = document.getElementById("myTable");
switching = true;
// Set the sorting direction to ascending:
dir = "asc";
/* Make a loop that will continue until
                no switching has been done: */
while (switching) { // Start by saying: no switching is done:
switching = false;
rows = table.rows;
/* Loop through all table rows (except the
                    first, which contains table headers): */
for (i = 1; i < (rows.length - 1); i++) { // Start by saying there should be no switching:
shouldSwitch = false;
/* Get the two elements you want to compare,
                        one from current row and one from the next: */
x = rows[i].getElementsByTagName("TD")[n];
y = rows[i + 1].getElementsByTagName("TD")[n];
/* Check if the two rows should switch place,
                        based on the direction, asc or desc: */
if (dir == "asc") {
if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) { // If so, mark as a switch and break the loop:
shouldSwitch = true;
break;
}
} else if (dir == "desc") {
if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) { // If so, mark as a switch and break the loop:
shouldSwitch = true;
break;
}
}
}
if (shouldSwitch) { /* If a switch has been marked, make the switch
                        and mark that a switch has been done: */
rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
switching = true;
// Each time a switch is done, increase this count by 1:
switchcount++;
} else { /* If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again. */
if (switchcount == 0 && dir == "asc") {
dir = "desc";
switching = true;
}
}
}
}
		</script>

	{% endblock %}
